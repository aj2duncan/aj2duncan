<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R markdown on aj2duncan.com</title>
    <link>/categories/r-markdown/</link>
    <description>Recent content in R markdown on aj2duncan.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 17 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="/categories/r-markdown/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Converting LaTeX to Word using pandoc</title>
      <link>/blog/converting-latex-to-word-using-pandoc/</link>
      <pubDate>Sat, 17 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/converting-latex-to-word-using-pandoc/</guid>
      <description>A few weeks ago I needed to convert an academic paper written using LaTeX into a Microsoft Word document. My preferred way of doing this would be to use pandoc.
In the past I have used pandoc in the command line. On checking my (reasonably) new laptop, it appeared that I didn’t have access to it on the command line but I knew it had to be installed as part of the RStudio install.</description>
    </item>
    
    <item>
      <title>R markdown to Powerpoint</title>
      <link>/blog/r-markdown-to-powerpoint/</link>
      <pubDate>Sat, 09 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/r-markdown-to-powerpoint/</guid>
      <description>Despite knowing that R markdown (through the amazing Pandoc) can create Powerpoint presentations I haven’t used it until very recently. In doing so I thought I would write a quick demo and show what the default slides look like.
We’ll talk about customisation and the end but let’s start with the defaults and demo some things you can do. Most of the code included is the in the template document.</description>
    </item>
    
  </channel>
</rss>
