<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>leaflet on aj2duncan.com</title>
    <link>/tags/leaflet/</link>
    <description>Recent content in leaflet on aj2duncan.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 29 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/leaflet/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Creating a Squared Grid Across Scotland</title>
      <link>/blog/creating-a-squared-grid-across-scotland/</link>
      <pubDate>Sun, 29 May 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/creating-a-squared-grid-across-scotland/</guid>
      <description>Recently I have been using the sf and tmap packages a lot and I thought I would come back to finish a draft post I started a while ago.
As part of a project a while ago, I needed to create a square grid across Scotland and produce centroids for each. We start by loading the packages we’ll need and the shapefile.
library(sf)library(tmap)scot &amp;lt;- st_read(&amp;quot;scot_shapefile/scot.shp&amp;quot;)We can see what this looks like with a quick plot.</description>
    </item>
    
    <item>
      <title>Postcode Polygons on a Leaflet Map - Updated</title>
      <link>/blog/postcode-polygons-on-a-leaflet-map-updated/</link>
      <pubDate>Sat, 21 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/postcode-polygons-on-a-leaflet-map-updated/</guid>
      <description>Following an earlier post where I plotted postcode polygons on a Leaflet map I wanted to update it to use the sf package which is now my default package for working with spatial data. Note that I’ve also started using &amp;lt;- again after being a longtime user of =.
Sorting the DataFirst we’ll load the packages we need.
library(sf)library(leaflet)library(tidyverse)Next we read in the data.</description>
    </item>
    
    <item>
      <title>Leaflet Draw, Exporting Polygons and the Holepunch Package</title>
      <link>/blog/leaflet-draw-exporting-shapefiles-and-the-holepunch-package/</link>
      <pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/leaflet-draw-exporting-shapefiles-and-the-holepunch-package/</guid>
      <description>A little over a month ago I attended FOSS4GUK 2019. It was a great conference and there were a few presentations (like mine) on Leaflet. One conversation I had was about using Leaflet to gather data and the question was whether it could be used draw and export polygons/polylines. I thought I would see if it could be. I have previously used a shiny app to record points submitted by users but not to record polygons.</description>
    </item>
    
    <item>
      <title>Postcode Polygons on a Leaflet Map</title>
      <link>/blog/postcode-polygons-on-a-leaflet-map/</link>
      <pubDate>Wed, 30 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/postcode-polygons-on-a-leaflet-map/</guid>
      <description>I have been using Leaflet for a little while now but always as part of a shiny app. However, as Mike Spencer went to all the trouble of producing polygons for GB postcode areas and districts I thought this was a good opportunity for a blog post (Spencer 2018).
Sorting the DataFirst we’ll load the packages we need.
library(rgdal)library(leaflet)Next we read in the data.</description>
    </item>
    
  </channel>
</rss>
